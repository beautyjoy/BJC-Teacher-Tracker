# replace with version(s) of Ruby that matches your Gemfile:
language: ruby
rvm:
  - 2.6.6

services:
  - postgresql

addons:
  chrome: stable

# make sure production-only gems are not installed
bundler_args: --without production

env:
  global:
    # in TravisCI settings, set CCKEY to your CodeClimate Test Reporter ID:
    - CC_TEST_REPORTER_ID=$CCKEY
    - CCTR=./cc-test-reporter
    # set to whatever timezone your app assumes from this list:
    # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    - TZ=America/Los_Angeles

before_install:
  - nvm install 12

# steps to run BEFORE the test run
before_script:
  # create config/application.yml (sensitive API keys etc) from config/application.yml.asc
  # IMPORTANT: you must MANUALLY set correct value of encryption KEY in Travis settings for your project --
  # DO NOT expose that value here!
  # gpg --passphrase $KEY -d -o config/application.yml config/application.yml.asc
  # Chromedriver to interface with headless chrome
  - LATEST_CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"`
  - curl "https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O
  - unzip chromedriver_linux64.zip -d ~/bin
  # install CodeClimate test reporter and tell it we are starting a test run
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > $CCTR
  - chmod +x $CCTR
  - $CCTR before-build
  - bin/yarn
  - bin/rails webpacker:compile

script:
  # setup the test database, including any seed data
  - bundle exec rake db:setup
  - bundle exec rake db:migrate
  # There is a very weird ordering effect. Run cucumber before rspec or some data is invalid.
  - bundle exec cucumber
  - $CCTR format-coverage -t simplecov --output coverage/codeclimate.$SUITE.json
  - bundle exec rspec
  - $CCTR format-coverage -t simplecov --output coverage/codeclimate.$SUITE.json
  # TODO: Deprecate this step after moving to rspec
  - bundle exec rails test
  - $CCTR format-coverage -t simplecov --output coverage/codeclimate.$SUITE.json

after_script:
  # combine coverage from all suites, and upload to CodeClimate
  - $CCTR sum-coverage coverage/codeclimate.*.json | $CCTR upload-coverage
  - $CCTR after-build --exit-code $TRAVIS_TEST_RESULT
  # just in case, be paranoid and remove sensitive config info file
  - rm -f config/application.yml
