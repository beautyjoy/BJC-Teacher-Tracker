<%= form_with model: @teacher, id: 'new_teacher' do |f| %>

<%# Render the extra input group to change teacher's application
status ONLY IF the person viewing this page is an admin. %>
<%if @is_admin %>
  <div class='form-group form-input-group'>
    <div class='form-group row'>
      <%# The application status input field %>
      <div class='col-6'>
          <%= f.label :application_status, "Application Status:", class: "label-required" %>
          <%= f.select(
          :application_status,
          options_for_select(Teacher.application_status_options, teacher.application_status_before_type_cast),
          { include_blank: "Select an option" },
          { id: 'application_status_select_value', class: 'form-control', required: true, onchange: 'updateReasonField();' }
        ) %>
      </div>
      <%# Skip email notification dropdown Y/N %>
      <div id = 'skip_email_dropdown' class='col-6'>
          <%= label_tag :skip_email, "Skip Email Notification: ", id: 'skip-email', class: "label-optional" %>
          <%= select_tag(
            :skip_email,
            options_for_select(['No', 'Yes'], 'No'),
          { include_blank: false, class: 'form-control', required: false }
          )%>
      </div>
    </div>
    <%# Denial/request more info reason input field, if applicable %>
    <div id= 'request_or_deny_reason' class='form-group row'>
        <%# Text Field for Denial/Request Reason %>
        <div class='col-12'>
          <%# Use label_tag and text_field_tag to ensure that these inputs are
          not linked to the actual form, which is backed by the model attributes %>
          <%= label_tag :request_reason, "Request Reason: ", id: 'request_or_deny_reason_text', class: "label-optional" %>
          <%= text_field_tag :request_reason, nil, class: 'form-control' %>
        </div>
    </div>  
  </div>
<% end %>

<div class='form-group form-input-group'>

  <h2>Your Information</h2>
  <div class='form-group row'>
    <div class='col-6'>
      <%= f.label :first_name, "First Name", class: "label-required" %>
      <%= f.text_field :first_name, placeholder: 'Alonzo', class: 'form-control',
        required: true %>
    </div>

    <div class='col-6'>
      <%= f.label :last_name, "Last Name", class: "label-required" %>
      <%= f.text_field :last_name, placeholder: 'Church', class: 'form-control',
        required: true %>
    </div>
  </div>

  <div class='form-group row'>
    <div class='col-6'>
      <%= label_tag 'email[primary]', "School Email", class: "label-required" %>
      <%= text_field_tag 'email[primary]', @teacher.primary_email, placeholder: 'alonzo@snap.berkeley.edu',
                         class: 'form-control', required: true, type: :email, readonly: @readonly %>
    </div>

    <div class='col-6'>
      <%= f.label :snap do %>
        Snap<i>!</i> Username <i>(optional)</i>
      <% end %>
      <%= f.text_field :snap, placeholder: "alonzo", class: "form-control", readonly: @readonly %>
    </div>
  </div>

  <div class="form-group row">
    <div class='col-12'>
      <%= f.label :personal_website do %>
        Personal or Course Website <i>(optional)</i>
      <% end %>
      <%= f.text_field :personal_website, placeholder: "school.edu", class: "form-control",
      pattern: ".+\\..+", title: "Please enter a valid URL." %>
    </div>
  </div>

  <%# For now... only admins can enter/edit personal emails. %>

  <%- if current_user&.admin? || @teacher.personal_emails.present? %>
  <div class="form-group row">
    <div class='col-12'>
      <%= label_tag "email[personal_1]" do %>
        Personal Email</i>
      <% end %>
      <%= text_field_tag "email[personal_1]", @teacher.personal_emails, placeholder: 'alonzo@gmail.com', class: 'form-control',
        required: false, type: :email, readonly: @readonly %>
    </div>
  </div>
  <% end %>

  <div class='form-group row'>
    <div class='col-12'>
      <%= f.label :status, "What's your current status?", class: "label-required" %>
      <%= f.select(
        :status,
        options_for_select(Teacher.status_options, teacher.status_before_type_cast),
        { include_blank: "Select an option" },
        { class: 'form-control', required: true, onchange: 'listenForStatusOptionChange();' }
      ) %>
    </div>
  </div>

<!-- File upload input field -->
<% if is_new_teacher_page %>
  <div class='form-group row' id = 'upload_file_field'>
    <div class='col-12'>
    <%= f.label :files, "Upload supporting files: " %>
    <%= f.file_field :files, multiple: true, direct_upload: true %>
    </div>
  </div>
<% else %>
  <div class='form-group row' id = 'upload_file_field'>
    <div class='col-12'>
    <%= f.label :more_files, "Upload more files: " %>
    <%= f.file_field :more_files, multiple: true, direct_upload: true %>
    </div>
  </div>
  <!-- Only displays on the new teacher page -->
  <!-- Edit teacher page CANNOT allow adding/removing files
  because the nested forms result in undefined
  behavior in Rails, including random controller
  actions getting called from unrelated submit buttons -->
<% end %>

  <div class='form-group row'>
    <div class='col-12'>
      <%= f.label :education_level, "What's your education level target?", class: "label-required" %>
      <%= f.select(
        :education_level,
        options_for_select(Teacher.education_level_options, teacher.education_level_before_type_cast),
        { include_blank: "Select an option" },
        { class: 'form-control', required: false }
      ) %>
    </div>
  </div>

  <div class='form-group row'>
    <div class='col-12'>
      <%= f.label :languages, "What language(s) are spoken in the classroom?", 
      class: "label-required" %>
      <%= f.select(
      :languages,
      options_for_select(Teacher.language_options, @teacher.languages),
      {},
      multiple: true,
      include_blank: "Select an option",
      class: 'selectize', required: true
      ) %>
    </div>
  </div>

  <div class='form-group row'>
    <div class='col-12'>
        <%= f.label :more_info, "More Information", class: "label-required" %>
        <%= f.text_area :more_info, placeholder: "I applied for access because...",
          class: "form-control", required: true, rows: "2" %>
    </div>
    <small class="col-12 form-text text-muted"><strong id='teacher-more-info-reminder'>Please tell us why you need access.</strong></small>
  </div>
    <%= f.hidden_field :school_id %>
  </div>

  <div class='form-group form-input-group' id='school_container'>
    <%= form_with model: @teacher.school, local: true do |school| %>
      <h2>Your School</h2>
        <%= render 'schools/selectize_form', f: school %>
  </div>

  <%= f.submit (f.object.new_record? ? 'Submit' : 'Update'), class: 'btn btn-primary' %>
<% end %>
<% end %>

<script>

  $(document).ready(function() {
    $('.selectize').selectize({
      plugins: ['remove_button'],
      delimiter: ",",
      persist: false,
      create: false
    });
    //$('#file-upload-field').on('change', function() {
      // Submit the form when a file is selected
    //  $('#file-upload-form').submit();
    //});
    //on loading the page, immediately update the reason field depending on 
    //the value of the application status and check teacher status option
    updateReasonField();
    listenForStatusOptionChange();
  });

  //JS to update the text description for the denial/request reason input
  //field and hide/display relevant linked fields depending on what is 
  //selected in the application status dropdown
  function updateReasonField() {
    $("#request_or_deny_reason").show();
    $("#skip_email_dropdown").show();
    var selected_app_status = $("#application_status_select_value").val();
    switch (selected_app_status) {
      case "Denied":
        $( "#request_or_deny_reason_text").text("Denial Reason: ");
        break;
      case "Info Needed":
        $( "#request_or_deny_reason_text").text("Info Request Reason: ");
        break;
      case "Validated":
        //show the skip email notification but not 
        //the deny/request more info reason box
        $("#request_or_deny_reason").hide();
        break;
      default: //not reviewed
        //neither boxes need to be shown since they are not applicable
        $("#request_or_deny_reason").hide();
        $("#skip_email_dropdown").hide();
    }
  }

  function listenForStatusOptionChange() {
    var status_val = $("#teacher_status").val();
    debugger;
    <%# For TEALS volunteer, we also ask for the name of their host teacher. %>
    if (status_val == 3) {
      $("#teacher-more-info-reminder").text("Please tell us why you need access, and include the name of your host teacher here.");
      $('#upload_file_field').hide();
    } else {
      $("#teacher-more-info-reminder").text("Please tell us why you need access.");
      <%# If homeschool, then hide schools form %>
      if (status_val == 9) {
        createAndSelectDummyOption();
        $('#school_container').hide();
        $('#upload_file_field').show();
      } else {
        // Show the outer container, but hide the new school form
        $('#school_container').show();
        $("#school_form").hide();
        $('#upload_file_field').hide();
      }
    } 
  }

  //creates and selects a 'dummy' selectize option. This is only to
  //prevent frontend validations from failing to submit the form when it
  //is hidden because of the home school being selected. The dummy,
  //in this case, is defined as the FIRST item in the selectize list. Backend
  //logic is handled in the teachers controller.
  function createAndSelectDummyOption() {
        $("#school_form").show();
        const selectizeElement = $('#school_selectize');
        const selectizeInstance = selectizeElement[0].selectize;
        const firstOptionKey = Object.keys(selectizeInstance.options)[0];
        selectizeInstance.setValue(firstOptionKey);
  }

</script>
