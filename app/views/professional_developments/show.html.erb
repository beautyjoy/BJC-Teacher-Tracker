<%= provide(:h1, @professional_development.name) %>

<div class="card" data-professional-development-id="<%= @professional_development.id %>">
  <div class="card-header">
    <div class="row d-flex">
      <div class="col-sm-8 d-flex">
        <h3>
          <%= @professional_development.name %>
        </h3>
      </div>
      <div class="col-sm-4 text-right">
        <%= link_to("Edit", edit_professional_development_path(@professional_development), class: "btn btn-primary") %>
        <%= link_to("Delete", professional_development_path(@professional_development), method: "delete", class: "btn btn-danger", data: { confirm: "Are you sure?" }) %>
      </div>
    </div>
  </div>
  <div class="card-body ml-5">
    <div class="row mt-3 pb-3">
      <% [['Location', @professional_development.location],
          ['Dates', "#{@professional_development.start_date.to_s} to #{@professional_development.end_date.to_s}"],
          ['GradeLevel', @professional_development.display_grade_level]].each do |label, value| %>
        <div class="col-sm-4">
          <h5><%= label %></h5>
          <%= value %>
        </div>
      <% end %>
    </div>

    <hr>
    <div class="row mt-5 pb-3">
      <h4>PD Registrations</h4>
      <div class="col-12 mb-3">
        <!-- Trigger/modal button -->
        <%= button_tag "Add Teacher", type: 'button', class: "btn btn-success", data: { toggle: "modal", target: "#addTeacherModal" } %>
      </div>
      <div class="col-12">
        <table class="table table-striped">
          <thead>
          <tr>
            <th>Teacher Name</th>
            <th>PD Session</th>
            <th>Attended</th>
            <th>Role</th>
            <th>Actions</th>
          </tr>
          </thead>
          <tbody>
          <% @professional_development.pd_registrations.each do |registration| %>
            <tr>
              <td data-teacher-name><%= link_to(registration.teacher_name, teacher_path(registration.teacher_id)) %></td>
              <td><%= @professional_development.name %></td>
              <td data-attended><%= registration.attended ? 'Yes' : 'No' %></td>
              <td data-role><%= registration.role %></td>
              <td>
          <span class="btn-group">
            <%= link_to "Update", "#", class: "btn btn-info", data: { toggle: "modal", target: "#addTeacherModal", registration_id: registration.id } %>
            <%= link_to("❌", professional_development_pd_registration_path(@professional_development.id, registration.id), method: "delete", class: "btn btn-outline-danger", data: { confirm: "Are you sure?" }) %>
          </span>
              </td>
            </tr>
          <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="addTeacherModal" tabindex="-1" role="dialog" aria-labelledby="addTeacherModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addTeacherModalLabel">Add Teacher to PD Session</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <%= form_for :pd_registration, url: professional_development_pd_registrations_path(@professional_development), method: :post do |f| %>
          <div class="form-group">
            <%= f.label :teacher_name, "Teacher Name" %>
            <!-- Add placeholder to input field -->
            <%= f.text_field :teacher_name, class: "form-control", placeholder: "Enter teacher name", required: true %>
          </div>

          <div class="form-group">
            <%= f.label :role, "Role" %>
            <!-- Add prompt to dropdown menu -->
            <%= f.select :role, [['Leader', 'Leader'], ['Attendee', 'Attendee']], { prompt: "Select your role" }, { class: "form-control", required: true } %>
          </div>

          <div class="form-group">
            <%= f.label :attended, "Attended" %>
            <!-- Add prompt to dropdown menu -->
            <%= f.select :attended, [['Yes', true], ['No', false]], { prompt: "Did the teacher attend?" }, { class: "form-control", required: true } %>
          </div>

          <!-- Hidden field to pass PD session ID -->
          <%= f.hidden_field :professional_development_id, value: @professional_development.id %>

          <%= f.submit "Add", class: "btn btn-primary" %>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cardElement = document.querySelector('.card[data-professional-development-id]');
        const pdId = cardElement.getAttribute('data-professional-development-id');
        const addTeacherButton = document.querySelector('[data-target="#addTeacherModal"].btn-success');
        const updateButtons = document.querySelectorAll('.btn-info[data-target="#addTeacherModal"]');


        addTeacherButton.addEventListener("click", function () {
            resetModalForm();
            document.getElementById('addTeacherModalLabel').textContent = 'Add Teacher to PD Session';
            const form = document.querySelector('#addTeacherModal form');
            form.action = `/professional_developments/${pdId}/pd_registrations/`;
            form.method = 'post';
        });

        updateButtons.forEach(button => {
            button.addEventListener("click", function () {
                const row = button.closest('tr');
                const teacherName = row.querySelector('[data-teacher-name]').textContent;
                const role = row.querySelector('[data-role]').textContent;
                const attended = row.querySelector('[data-attended]').textContent === 'Yes';

                populateModalForm({teacher_name: teacherName, role: role, attended: attended});
                document.getElementById('addTeacherModalLabel').textContent = 'Edit Teacher in PD Session';
                const form = document.querySelector('#addTeacherModal form');
                const registrationId = button.getAttribute("data-registration_id");
                // Correctly set the form action for updating
                form.action = `/professional_developments/${pdId}/pd_registrations/${registrationId}`;
                form.method = 'post';
                // Add hidden input to simulate the PATCH method for Rails
                let methodInput = document.querySelector('input[name="_method"]');
                if (!methodInput) {
                    methodInput = document.createElement('input');
                    methodInput.setAttribute('type', 'hidden');
                    methodInput.setAttribute('name', '_method');
                    form.appendChild(methodInput);
                }
                methodInput.value = 'patch';
            });
        });
    });

    function resetModalForm() {
        document.querySelector('#addTeacherModal form').reset();
    }

    function populateModalForm(data) {
        // Debugging: Log the data to see what is being received
        console.log("Populating form with data:", data);

        document.querySelector('[name="pd_registration[teacher_name]"]').value = data.teacher_name;

        const roleDropdown = document.querySelector('[name="pd_registration[role]"]');
        let roleMatched = false; // Flag to check if we find a match
        Array.from(roleDropdown.options).forEach(option => {
            // Trim and compare values case-insensitively
            if (option.value.toLowerCase().trim() === data.role.toLowerCase().trim()) {
                option.selected = true;
                roleMatched = true;
            }
        });

        // Fallback: If no match found, select the prompt option
        if (!roleMatched) {
            roleDropdown.selectedIndex = 0; // Assuming the first option is your prompt
        }

        // Assuming `data.attended` is boolean, adjust if necessary
        const attendedDropdown = document.querySelector('[name="pd_registration[attended]"]');
        attendedDropdown.value = String(data.attended); // Simplified setting for boolean values
    }
</script>
