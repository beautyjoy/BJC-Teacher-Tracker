<%= form_with(model: @teacher, url: teacher_email_address_path(@teacher), method: :put, local: true) do |form| %>
  <div id="email-fields">
    <%= form.fields_for :email_addresses, @teacher.email_addresses.where(primary: false) do |email_form| %>
      <div class="form-group row email-field">
        <%= email_form.label :email, "Personal Email", class: "col-md-2 col-form-label" %>
        <div class="col-md-8">
          <%= email_form.email_field :email, class: 'form-control', required: true %>
        </div>
        <% if email_form.object.persisted? %>
          <div class="col-md-2">
            <%= email_form.hidden_field :_destroy %>
            <%= link_to 'Remove', '#', class: 'btn btn-danger remove-email', data: { action: 'remove' } %>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
  <div class="form-group">
    <%= link_to 'Add Email', '#', class: 'btn btn-secondary', id: 'add_email' %>
  </div>
  <div class="form-group">
    <%= form.submit 'Update Emails', class: 'btn btn-primary' %>
  </div>
<% end %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const emailFieldsContainer = document.getElementById('email-fields');
        const addEmailButton = document.getElementById('add_email');

        addEmailButton.addEventListener('click', function(event) {
            event.preventDefault();
            const newFieldIndex = document.querySelectorAll('.email-field').length;
            const newFieldHtml = `
        <div class="form-group row email-field">
          <label class="col-md-2 col-form-label">Personal Email</label>
          <div class="col-md-8">
            <input type="email" name="teacher[email_addresses_attributes][${newFieldIndex}][email]" placeholder="Enter email" class="form-control" required>
          </div>
          <div class="col-md-2">
            <button type="button" class="btn btn-danger remove-email" onclick="removeField(this)">Remove</button>
          </div>
        </div>`;
            emailFieldsContainer.insertAdjacentHTML('beforeend', newFieldHtml);
        });

        emailFieldsContainer.addEventListener('click', function(event) {
            if (event.target.classList.contains('remove-email')) {
                event.preventDefault();
                const field = event.target.closest('.email-field');
                if (field.querySelector('input[type="hidden"]')) {
                    field.querySelector('input[type="hidden"]').value = '1'; // Mark for destruction
                    field.style.display = 'none'; // Hide the field
                } else {
                    field.remove(); // Remove field if it was not persisted
                }
            }
        });

        function removeField(button) {
            const field = button.closest('.email-field');
            field.remove();
        }
    });
</script>
